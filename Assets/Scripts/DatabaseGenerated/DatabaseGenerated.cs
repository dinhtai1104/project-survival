using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class DB_Equipment : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Equipment(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Equipment(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5517546562277333375UL,16665680798075242630UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 Id => _Id[Index];
	public System.String StatName => _StatName[Index];
	public System.Single StatValue => _StatValue[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5419922698562274805UL, 6820540367795764644UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id => _ufle12jhs77_Id ?? (_ufle12jhs77_Id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5566407069750613177UL, 10335210162240578486UL), () => _ufle12jhs77_Id = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_StatName;
	public static BansheeGz.BGDatabase.BGFieldString _StatName => _ufle12jhs77_StatName ?? (_ufle12jhs77_StatName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5764001884685377119UL, 14760467108199830417UL), () => _ufle12jhs77_StatName = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_StatValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _StatValue => _ufle12jhs77_StatValue ?? (_ufle12jhs77_StatValue = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5095502301976073399UL, 2049990875013841048UL), () => _ufle12jhs77_StatValue = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private DB_Equipment() : base(MetaDefault)
	{
	}
	private DB_Equipment(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Equipment(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Equipment(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Equipment FindEntity(Predicate<DB_Equipment> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Equipment) entity)) as DB_Equipment;
	}
	public static List<DB_Equipment> FindEntities(Predicate<DB_Equipment> filter, List<DB_Equipment> result=null, Comparison<DB_Equipment> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Equipment> action, Predicate<DB_Equipment> filter=null, Comparison<DB_Equipment> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Equipment) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Equipment) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Equipment)e1,(DB_Equipment)e2));
	}
	public static DB_Equipment GetEntity(BGId entityId) => (DB_Equipment) MetaDefault.GetEntity(entityId);
	public static DB_Equipment GetEntity(int index) => (DB_Equipment) MetaDefault[index];
	public static DB_Equipment GetEntity(string entityName) => (DB_Equipment) MetaDefault.GetEntity(entityName);
}

public partial class DB_Dungeon : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Dungeon(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Dungeon(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4818500370345381636UL,12112608833673709454UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 DungeonId => _DungeonId[Index];
	public System.String WaveId => _WaveId[Index];
	public System.Int32 LevelEnemy => _LevelEnemy[Index];
	public System.Int32 Length => _Length[Index];
	public System.Single DelayStart => _DelayStart[Index];
	public System.Single Frequency => _Frequency[Index];
	public System.Single RandomAdd => _RandomAdd[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5514940696674268650UL, 13652136585090338707UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DungeonId;
	public static BansheeGz.BGDatabase.BGFieldInt _DungeonId => _ufle12jhs77_DungeonId ?? (_ufle12jhs77_DungeonId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4896735550038176748UL, 6009861749873254044UL), () => _ufle12jhs77_DungeonId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4852096918358621168UL, 6027905963135471513UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LevelEnemy;
	public static BansheeGz.BGDatabase.BGFieldInt _LevelEnemy => _ufle12jhs77_LevelEnemy ?? (_ufle12jhs77_LevelEnemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5428650345630066318UL, 15781350494818850959UL), () => _ufle12jhs77_LevelEnemy = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Length;
	public static BansheeGz.BGDatabase.BGFieldInt _Length => _ufle12jhs77_Length ?? (_ufle12jhs77_Length = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5387921634078018349UL, 8217284423485567383UL), () => _ufle12jhs77_Length = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DelayStart;
	public static BansheeGz.BGDatabase.BGFieldFloat _DelayStart => _ufle12jhs77_DelayStart ?? (_ufle12jhs77_DelayStart = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5106250717991129557UL, 15940863006044014240UL), () => _ufle12jhs77_DelayStart = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Frequency;
	public static BansheeGz.BGDatabase.BGFieldFloat _Frequency => _ufle12jhs77_Frequency ?? (_ufle12jhs77_Frequency = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4776896933090657880UL, 6477711059681813918UL), () => _ufle12jhs77_Frequency = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RandomAdd;
	public static BansheeGz.BGDatabase.BGFieldFloat _RandomAdd => _ufle12jhs77_RandomAdd ?? (_ufle12jhs77_RandomAdd = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5187880409492567394UL, 10935125371476704142UL), () => _ufle12jhs77_RandomAdd = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private DB_Dungeon() : base(MetaDefault)
	{
	}
	private DB_Dungeon(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Dungeon(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Dungeon(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Dungeon FindEntity(Predicate<DB_Dungeon> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Dungeon) entity)) as DB_Dungeon;
	}
	public static List<DB_Dungeon> FindEntities(Predicate<DB_Dungeon> filter, List<DB_Dungeon> result=null, Comparison<DB_Dungeon> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Dungeon> action, Predicate<DB_Dungeon> filter=null, Comparison<DB_Dungeon> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Dungeon) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Dungeon) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Dungeon)e1,(DB_Dungeon)e2));
	}
	public static DB_Dungeon GetEntity(BGId entityId) => (DB_Dungeon) MetaDefault.GetEntity(entityId);
	public static DB_Dungeon GetEntity(int index) => (DB_Dungeon) MetaDefault[index];
	public static DB_Dungeon GetEntity(string entityName) => (DB_Dungeon) MetaDefault.GetEntity(entityName);
}

public partial class DB_Enemy : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Enemy(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Enemy(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4881486225735226932UL,7772313332750720688UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String Id => _Id[Index];
	public System.String Path => _Path[Index];
	public System.Single Hp => _Hp[Index];
	public System.Single Damage => _Damage[Index];
	public System.Single Speed => _Speed[Index];
	public System.Single AttackSpeed => _AttackSpeed[Index];
	public System.Single iHp => _iHp[Index];
	public System.Single iDamage => _iDamage[Index];
	public System.Single iSpeed => _iSpeed[Index];
	public System.Single iAttackSpeed => _iAttackSpeed[Index];
	public System.Collections.Generic.List<System.String> Tags => _Tags[Index];
	public System.Single AttackRange => _AttackRange[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5628759239601722407UL, 11191562407163079553UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldString _Id => _ufle12jhs77_Id ?? (_ufle12jhs77_Id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4950251145784339990UL, 3739287601053370810UL), () => _ufle12jhs77_Id = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Path;
	public static BansheeGz.BGDatabase.BGFieldString _Path => _ufle12jhs77_Path ?? (_ufle12jhs77_Path = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5718814828173295119UL, 14504112455402141088UL), () => _ufle12jhs77_Path = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Hp;
	public static BansheeGz.BGDatabase.BGFieldFloat _Hp => _ufle12jhs77_Hp ?? (_ufle12jhs77_Hp = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5345557200727483664UL, 4084568972135379860UL), () => _ufle12jhs77_Hp = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldFloat _Damage => _ufle12jhs77_Damage ?? (_ufle12jhs77_Damage = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5463547984772435321UL, 16764506508148677042UL), () => _ufle12jhs77_Damage = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _Speed => _ufle12jhs77_Speed ?? (_ufle12jhs77_Speed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5177272716303341427UL, 12268436345836187828UL), () => _ufle12jhs77_Speed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSpeed => _ufle12jhs77_AttackSpeed ?? (_ufle12jhs77_AttackSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5079194265169754738UL, 15739651275040353453UL), () => _ufle12jhs77_AttackSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iHp;
	public static BansheeGz.BGDatabase.BGFieldFloat _iHp => _ufle12jhs77_iHp ?? (_ufle12jhs77_iHp = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5728507633407605544UL, 5317521178103452839UL), () => _ufle12jhs77_iHp = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iDamage;
	public static BansheeGz.BGDatabase.BGFieldFloat _iDamage => _ufle12jhs77_iDamage ?? (_ufle12jhs77_iDamage = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4632917543034827306UL, 6486289876517566648UL), () => _ufle12jhs77_iDamage = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _iSpeed => _ufle12jhs77_iSpeed ?? (_ufle12jhs77_iSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5173801307719795115UL, 15272749403386630792UL), () => _ufle12jhs77_iSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iAttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _iAttackSpeed => _ufle12jhs77_iAttackSpeed ?? (_ufle12jhs77_iAttackSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4686206555625677081UL, 18054272801716197016UL), () => _ufle12jhs77_iAttackSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Tags;
	public static BansheeGz.BGDatabase.BGFieldListString _Tags => _ufle12jhs77_Tags ?? (_ufle12jhs77_Tags = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(5022514516694601424UL, 16281606801646570140UL), () => _ufle12jhs77_Tags = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackRange => _ufle12jhs77_AttackRange ?? (_ufle12jhs77_AttackRange = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5490436642101842478UL, 589637579496802477UL), () => _ufle12jhs77_AttackRange = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private DB_Enemy() : base(MetaDefault)
	{
	}
	private DB_Enemy(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Enemy(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Enemy(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Enemy FindEntity(Predicate<DB_Enemy> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Enemy) entity)) as DB_Enemy;
	}
	public static List<DB_Enemy> FindEntities(Predicate<DB_Enemy> filter, List<DB_Enemy> result=null, Comparison<DB_Enemy> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Enemy> action, Predicate<DB_Enemy> filter=null, Comparison<DB_Enemy> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Enemy) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Enemy) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Enemy)e1,(DB_Enemy)e2));
	}
	public static DB_Enemy GetEntity(BGId entityId) => (DB_Enemy) MetaDefault.GetEntity(entityId);
	public static DB_Enemy GetEntity(int index) => (DB_Enemy) MetaDefault[index];
	public static DB_Enemy GetEntity(string entityName) => (DB_Enemy) MetaDefault.GetEntity(entityName);
}

public partial class DB_DungeonWave : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_DungeonWave(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_DungeonWave(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5144449783210509049UL,7479618431436517778UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String WaveId => _WaveId[Index];
	public System.Int32 MaxInMap => _MaxInMap[Index];
	public System.String DefaultEnemy => _DefaultEnemy[Index];
	public System.Int32 DefaultAmount => _DefaultAmount[Index];
	public System.Single DefaultCluster => _DefaultCluster[Index];
	public System.Single CameraSize => _CameraSize[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5199273315712751020UL, 7180544439930714030UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5093171278526634684UL, 7265670424734474927UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxInMap;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxInMap => _ufle12jhs77_MaxInMap ?? (_ufle12jhs77_MaxInMap = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4687777164443925627UL, 7988887299335917972UL), () => _ufle12jhs77_MaxInMap = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DefaultEnemy;
	public static BansheeGz.BGDatabase.BGFieldString _DefaultEnemy => _ufle12jhs77_DefaultEnemy ?? (_ufle12jhs77_DefaultEnemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4872449555294330000UL, 11136832714392385672UL), () => _ufle12jhs77_DefaultEnemy = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DefaultAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _DefaultAmount => _ufle12jhs77_DefaultAmount ?? (_ufle12jhs77_DefaultAmount = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4672096289431929998UL, 17955527991210361241UL), () => _ufle12jhs77_DefaultAmount = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DefaultCluster;
	public static BansheeGz.BGDatabase.BGFieldFloat _DefaultCluster => _ufle12jhs77_DefaultCluster ?? (_ufle12jhs77_DefaultCluster = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5097424058560736049UL, 12085130021855477921UL), () => _ufle12jhs77_DefaultCluster = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CameraSize;
	public static BansheeGz.BGDatabase.BGFieldFloat _CameraSize => _ufle12jhs77_CameraSize ?? (_ufle12jhs77_CameraSize = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4848391233012276917UL, 689522806608232622UL), () => _ufle12jhs77_CameraSize = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private DB_DungeonWave() : base(MetaDefault)
	{
	}
	private DB_DungeonWave(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_DungeonWave(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_DungeonWave(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_DungeonWave FindEntity(Predicate<DB_DungeonWave> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_DungeonWave) entity)) as DB_DungeonWave;
	}
	public static List<DB_DungeonWave> FindEntities(Predicate<DB_DungeonWave> filter, List<DB_DungeonWave> result=null, Comparison<DB_DungeonWave> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_DungeonWave> action, Predicate<DB_DungeonWave> filter=null, Comparison<DB_DungeonWave> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_DungeonWave) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_DungeonWave) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_DungeonWave)e1,(DB_DungeonWave)e2));
	}
	public static DB_DungeonWave GetEntity(BGId entityId) => (DB_DungeonWave) MetaDefault.GetEntity(entityId);
	public static DB_DungeonWave GetEntity(int index) => (DB_DungeonWave) MetaDefault[index];
	public static DB_DungeonWave GetEntity(string entityName) => (DB_DungeonWave) MetaDefault.GetEntity(entityName);
}

public partial class DB_DungeonWaveEvent : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_DungeonWaveEvent(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_DungeonWaveEvent(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4871765252713828611UL,2314720731915947906UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String EventId => _EventId[Index];
	public System.String WaveId => _WaveId[Index];
	public System.String Enemy => _Enemy[Index];
	public System.Single Frequency => _Frequency[Index];
	public System.Int32 Max => _Max[Index];
	public System.Single Cluster => _Cluster[Index];
	public System.Single Chance => _Chance[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5086535514433118060UL, 1582930548383956865UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_EventId;
	public static BansheeGz.BGDatabase.BGFieldString _EventId => _ufle12jhs77_EventId ?? (_ufle12jhs77_EventId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4789340466822656901UL, 6183767132401948333UL), () => _ufle12jhs77_EventId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5311516809613237021UL, 8553127409402984107UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Enemy;
	public static BansheeGz.BGDatabase.BGFieldString _Enemy => _ufle12jhs77_Enemy ?? (_ufle12jhs77_Enemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5111734664589835512UL, 16387060256869261988UL), () => _ufle12jhs77_Enemy = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Frequency;
	public static BansheeGz.BGDatabase.BGFieldFloat _Frequency => _ufle12jhs77_Frequency ?? (_ufle12jhs77_Frequency = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5170584109326192786UL, 4465977195211569290UL), () => _ufle12jhs77_Frequency = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Max;
	public static BansheeGz.BGDatabase.BGFieldInt _Max => _ufle12jhs77_Max ?? (_ufle12jhs77_Max = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5075216157934649214UL, 17383140627019052947UL), () => _ufle12jhs77_Max = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Cluster;
	public static BansheeGz.BGDatabase.BGFieldFloat _Cluster => _ufle12jhs77_Cluster ?? (_ufle12jhs77_Cluster = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5331692585234256210UL, 13803938486354973362UL), () => _ufle12jhs77_Cluster = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Chance;
	public static BansheeGz.BGDatabase.BGFieldFloat _Chance => _ufle12jhs77_Chance ?? (_ufle12jhs77_Chance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4622173018493056856UL, 7812075392562688700UL), () => _ufle12jhs77_Chance = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private DB_DungeonWaveEvent() : base(MetaDefault)
	{
	}
	private DB_DungeonWaveEvent(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_DungeonWaveEvent(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_DungeonWaveEvent(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_DungeonWaveEvent FindEntity(Predicate<DB_DungeonWaveEvent> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_DungeonWaveEvent) entity)) as DB_DungeonWaveEvent;
	}
	public static List<DB_DungeonWaveEvent> FindEntities(Predicate<DB_DungeonWaveEvent> filter, List<DB_DungeonWaveEvent> result=null, Comparison<DB_DungeonWaveEvent> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_DungeonWaveEvent> action, Predicate<DB_DungeonWaveEvent> filter=null, Comparison<DB_DungeonWaveEvent> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_DungeonWaveEvent) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_DungeonWaveEvent) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_DungeonWaveEvent)e1,(DB_DungeonWaveEvent)e2));
	}
	public static DB_DungeonWaveEvent GetEntity(BGId entityId) => (DB_DungeonWaveEvent) MetaDefault.GetEntity(entityId);
	public static DB_DungeonWaveEvent GetEntity(int index) => (DB_DungeonWaveEvent) MetaDefault[index];
	public static DB_DungeonWaveEvent GetEntity(string entityName) => (DB_DungeonWaveEvent) MetaDefault.GetEntity(entityName);
}
#pragma warning restore 414
