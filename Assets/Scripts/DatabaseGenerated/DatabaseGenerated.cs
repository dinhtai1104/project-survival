using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

public partial class DB_Equipment : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Equipment(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Equipment(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5517546562277333375UL,16665680798075242630UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String IdEquipment => _IdEquipment[Index];
	public System.String ItemType => _ItemType[Index];
	public System.String StatName => _StatName[Index];
	public System.Single Stat => _Stat[Index];
	public System.Single Weight => _Weight[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5419922698562274805UL, 6820540367795764644UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IdEquipment;
	public static BansheeGz.BGDatabase.BGFieldString _IdEquipment => _ufle12jhs77_IdEquipment ?? (_ufle12jhs77_IdEquipment = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5566407069750613177UL, 10335210162240578486UL), () => _ufle12jhs77_IdEquipment = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ItemType;
	public static BansheeGz.BGDatabase.BGFieldString _ItemType => _ufle12jhs77_ItemType ?? (_ufle12jhs77_ItemType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5764001884685377119UL, 14760467108199830417UL), () => _ufle12jhs77_ItemType = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_StatName;
	public static BansheeGz.BGDatabase.BGFieldString _StatName => _ufle12jhs77_StatName ?? (_ufle12jhs77_StatName = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5095502301976073399UL, 2049990875013841048UL), () => _ufle12jhs77_StatName = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Stat;
	public static BansheeGz.BGDatabase.BGFieldFloat _Stat => _ufle12jhs77_Stat ?? (_ufle12jhs77_Stat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5490931226185412915UL, 13299080881365621139UL), () => _ufle12jhs77_Stat = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Weight;
	public static BansheeGz.BGDatabase.BGFieldFloat _Weight => _ufle12jhs77_Weight ?? (_ufle12jhs77_Weight = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4906715268965589722UL, 11921500290658956974UL), () => _ufle12jhs77_Weight = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_Equipment() : base(MetaDefault)
	{
	}
	private DB_Equipment(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Equipment(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Equipment(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Equipment FindEntity(Predicate<DB_Equipment> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Equipment) entity)) as DB_Equipment;
	}
	public static List<DB_Equipment> FindEntities(Predicate<DB_Equipment> filter, List<DB_Equipment> result=null, Comparison<DB_Equipment> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Equipment> action, Predicate<DB_Equipment> filter=null, Comparison<DB_Equipment> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Equipment) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Equipment) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Equipment)e1,(DB_Equipment)e2));
	}
	public static DB_Equipment GetEntity(BGId entityId) => (DB_Equipment) MetaDefault.GetEntity(entityId);
	public static DB_Equipment GetEntity(int index) => (DB_Equipment) MetaDefault[index];
	public static DB_Equipment GetEntity(string entityName) => (DB_Equipment) MetaDefault.GetEntity(entityName);
}

public partial class DB_Dungeon : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Dungeon(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Dungeon(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4818500370345381636UL,12112608833673709454UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 DungeonId => _DungeonId[Index];
	public System.String WaveId => _WaveId[Index];
	public System.Int32 LevelEnemy => _LevelEnemy[Index];
	public System.Int32 Length => _Length[Index];
	public System.Single DelayStart => _DelayStart[Index];
	public System.Single Frequency => _Frequency[Index];
	public System.Single RandomAdd => _RandomAdd[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5514940696674268650UL, 13652136585090338707UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DungeonId;
	public static BansheeGz.BGDatabase.BGFieldInt _DungeonId => _ufle12jhs77_DungeonId ?? (_ufle12jhs77_DungeonId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4896735550038176748UL, 6009861749873254044UL), () => _ufle12jhs77_DungeonId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4852096918358621168UL, 6027905963135471513UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LevelEnemy;
	public static BansheeGz.BGDatabase.BGFieldInt _LevelEnemy => _ufle12jhs77_LevelEnemy ?? (_ufle12jhs77_LevelEnemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5428650345630066318UL, 15781350494818850959UL), () => _ufle12jhs77_LevelEnemy = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Length;
	public static BansheeGz.BGDatabase.BGFieldInt _Length => _ufle12jhs77_Length ?? (_ufle12jhs77_Length = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5387921634078018349UL, 8217284423485567383UL), () => _ufle12jhs77_Length = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DelayStart;
	public static BansheeGz.BGDatabase.BGFieldFloat _DelayStart => _ufle12jhs77_DelayStart ?? (_ufle12jhs77_DelayStart = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5106250717991129557UL, 15940863006044014240UL), () => _ufle12jhs77_DelayStart = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Frequency;
	public static BansheeGz.BGDatabase.BGFieldFloat _Frequency => _ufle12jhs77_Frequency ?? (_ufle12jhs77_Frequency = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4776896933090657880UL, 6477711059681813918UL), () => _ufle12jhs77_Frequency = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RandomAdd;
	public static BansheeGz.BGDatabase.BGFieldFloat _RandomAdd => _ufle12jhs77_RandomAdd ?? (_ufle12jhs77_RandomAdd = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5187880409492567394UL, 10935125371476704142UL), () => _ufle12jhs77_RandomAdd = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_Dungeon() : base(MetaDefault)
	{
	}
	private DB_Dungeon(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Dungeon(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Dungeon(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Dungeon FindEntity(Predicate<DB_Dungeon> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Dungeon) entity)) as DB_Dungeon;
	}
	public static List<DB_Dungeon> FindEntities(Predicate<DB_Dungeon> filter, List<DB_Dungeon> result=null, Comparison<DB_Dungeon> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Dungeon> action, Predicate<DB_Dungeon> filter=null, Comparison<DB_Dungeon> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Dungeon) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Dungeon) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Dungeon)e1,(DB_Dungeon)e2));
	}
	public static DB_Dungeon GetEntity(BGId entityId) => (DB_Dungeon) MetaDefault.GetEntity(entityId);
	public static DB_Dungeon GetEntity(int index) => (DB_Dungeon) MetaDefault[index];
	public static DB_Dungeon GetEntity(string entityName) => (DB_Dungeon) MetaDefault.GetEntity(entityName);
}

public partial class DB_Enemy : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Enemy(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Enemy(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4881486225735226932UL,7772313332750720688UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String Id => _Id[Index];
	public System.String Path => _Path[Index];
	public System.Single Hp => _Hp[Index];
	public System.Single Damage => _Damage[Index];
	public System.Single Speed => _Speed[Index];
	public System.Single AttackSpeed => _AttackSpeed[Index];
	public System.Single iHp => _iHp[Index];
	public System.Single iDamage => _iDamage[Index];
	public System.Single iSpeed => _iSpeed[Index];
	public System.Single iAttackSpeed => _iAttackSpeed[Index];
	public System.Collections.Generic.List<System.String> Tags => _Tags[Index];
	public System.Single AttackRange => _AttackRange[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5628759239601722407UL, 11191562407163079553UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldString _Id => _ufle12jhs77_Id ?? (_ufle12jhs77_Id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4950251145784339990UL, 3739287601053370810UL), () => _ufle12jhs77_Id = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Path;
	public static BansheeGz.BGDatabase.BGFieldString _Path => _ufle12jhs77_Path ?? (_ufle12jhs77_Path = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5718814828173295119UL, 14504112455402141088UL), () => _ufle12jhs77_Path = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Hp;
	public static BansheeGz.BGDatabase.BGFieldFloat _Hp => _ufle12jhs77_Hp ?? (_ufle12jhs77_Hp = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5345557200727483664UL, 4084568972135379860UL), () => _ufle12jhs77_Hp = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldFloat _Damage => _ufle12jhs77_Damage ?? (_ufle12jhs77_Damage = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5463547984772435321UL, 16764506508148677042UL), () => _ufle12jhs77_Damage = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Speed;
	public static BansheeGz.BGDatabase.BGFieldFloat _Speed => _ufle12jhs77_Speed ?? (_ufle12jhs77_Speed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5177272716303341427UL, 12268436345836187828UL), () => _ufle12jhs77_Speed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSpeed => _ufle12jhs77_AttackSpeed ?? (_ufle12jhs77_AttackSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5079194265169754738UL, 15739651275040353453UL), () => _ufle12jhs77_AttackSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iHp;
	public static BansheeGz.BGDatabase.BGFieldFloat _iHp => _ufle12jhs77_iHp ?? (_ufle12jhs77_iHp = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5728507633407605544UL, 5317521178103452839UL), () => _ufle12jhs77_iHp = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iDamage;
	public static BansheeGz.BGDatabase.BGFieldFloat _iDamage => _ufle12jhs77_iDamage ?? (_ufle12jhs77_iDamage = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4632917543034827306UL, 6486289876517566648UL), () => _ufle12jhs77_iDamage = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _iSpeed => _ufle12jhs77_iSpeed ?? (_ufle12jhs77_iSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5173801307719795115UL, 15272749403386630792UL), () => _ufle12jhs77_iSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_iAttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _iAttackSpeed => _ufle12jhs77_iAttackSpeed ?? (_ufle12jhs77_iAttackSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4686206555625677081UL, 18054272801716197016UL), () => _ufle12jhs77_iAttackSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Tags;
	public static BansheeGz.BGDatabase.BGFieldListString _Tags => _ufle12jhs77_Tags ?? (_ufle12jhs77_Tags = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(5022514516694601424UL, 16281606801646570140UL), () => _ufle12jhs77_Tags = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackRange => _ufle12jhs77_AttackRange ?? (_ufle12jhs77_AttackRange = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5490436642101842478UL, 589637579496802477UL), () => _ufle12jhs77_AttackRange = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_Enemy() : base(MetaDefault)
	{
	}
	private DB_Enemy(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Enemy(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Enemy(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Enemy FindEntity(Predicate<DB_Enemy> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Enemy) entity)) as DB_Enemy;
	}
	public static List<DB_Enemy> FindEntities(Predicate<DB_Enemy> filter, List<DB_Enemy> result=null, Comparison<DB_Enemy> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Enemy> action, Predicate<DB_Enemy> filter=null, Comparison<DB_Enemy> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Enemy) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Enemy) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Enemy)e1,(DB_Enemy)e2));
	}
	public static DB_Enemy GetEntity(BGId entityId) => (DB_Enemy) MetaDefault.GetEntity(entityId);
	public static DB_Enemy GetEntity(int index) => (DB_Enemy) MetaDefault[index];
	public static DB_Enemy GetEntity(string entityName) => (DB_Enemy) MetaDefault.GetEntity(entityName);
}

public partial class DB_DungeonWave : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_DungeonWave(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_DungeonWave(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5144449783210509049UL,7479618431436517778UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String WaveId => _WaveId[Index];
	public System.Int32 MaxInMap => _MaxInMap[Index];
	public System.String DefaultEnemy => _DefaultEnemy[Index];
	public System.Int32 DefaultAmount => _DefaultAmount[Index];
	public System.Single DefaultCluster => _DefaultCluster[Index];
	public System.Single CameraSize => _CameraSize[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5199273315712751020UL, 7180544439930714030UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5093171278526634684UL, 7265670424734474927UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxInMap;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxInMap => _ufle12jhs77_MaxInMap ?? (_ufle12jhs77_MaxInMap = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4687777164443925627UL, 7988887299335917972UL), () => _ufle12jhs77_MaxInMap = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DefaultEnemy;
	public static BansheeGz.BGDatabase.BGFieldString _DefaultEnemy => _ufle12jhs77_DefaultEnemy ?? (_ufle12jhs77_DefaultEnemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4872449555294330000UL, 11136832714392385672UL), () => _ufle12jhs77_DefaultEnemy = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DefaultAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _DefaultAmount => _ufle12jhs77_DefaultAmount ?? (_ufle12jhs77_DefaultAmount = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4672096289431929998UL, 17955527991210361241UL), () => _ufle12jhs77_DefaultAmount = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DefaultCluster;
	public static BansheeGz.BGDatabase.BGFieldFloat _DefaultCluster => _ufle12jhs77_DefaultCluster ?? (_ufle12jhs77_DefaultCluster = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5097424058560736049UL, 12085130021855477921UL), () => _ufle12jhs77_DefaultCluster = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CameraSize;
	public static BansheeGz.BGDatabase.BGFieldFloat _CameraSize => _ufle12jhs77_CameraSize ?? (_ufle12jhs77_CameraSize = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4848391233012276917UL, 689522806608232622UL), () => _ufle12jhs77_CameraSize = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_DungeonWave() : base(MetaDefault)
	{
	}
	private DB_DungeonWave(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_DungeonWave(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_DungeonWave(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_DungeonWave FindEntity(Predicate<DB_DungeonWave> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_DungeonWave) entity)) as DB_DungeonWave;
	}
	public static List<DB_DungeonWave> FindEntities(Predicate<DB_DungeonWave> filter, List<DB_DungeonWave> result=null, Comparison<DB_DungeonWave> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_DungeonWave> action, Predicate<DB_DungeonWave> filter=null, Comparison<DB_DungeonWave> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_DungeonWave) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_DungeonWave) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_DungeonWave)e1,(DB_DungeonWave)e2));
	}
	public static DB_DungeonWave GetEntity(BGId entityId) => (DB_DungeonWave) MetaDefault.GetEntity(entityId);
	public static DB_DungeonWave GetEntity(int index) => (DB_DungeonWave) MetaDefault[index];
	public static DB_DungeonWave GetEntity(string entityName) => (DB_DungeonWave) MetaDefault.GetEntity(entityName);
}

public partial class DB_DungeonWaveEvent : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_DungeonWaveEvent(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_DungeonWaveEvent(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4871765252713828611UL,2314720731915947906UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String EventId => _EventId[Index];
	public System.String WaveId => _WaveId[Index];
	public System.String Enemy => _Enemy[Index];
	public System.Single Frequency => _Frequency[Index];
	public System.Int32 Max => _Max[Index];
	public System.Single Cluster => _Cluster[Index];
	public System.Single Chance => _Chance[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5086535514433118060UL, 1582930548383956865UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_EventId;
	public static BansheeGz.BGDatabase.BGFieldString _EventId => _ufle12jhs77_EventId ?? (_ufle12jhs77_EventId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4789340466822656901UL, 6183767132401948333UL), () => _ufle12jhs77_EventId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_WaveId;
	public static BansheeGz.BGDatabase.BGFieldString _WaveId => _ufle12jhs77_WaveId ?? (_ufle12jhs77_WaveId = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5311516809613237021UL, 8553127409402984107UL), () => _ufle12jhs77_WaveId = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Enemy;
	public static BansheeGz.BGDatabase.BGFieldString _Enemy => _ufle12jhs77_Enemy ?? (_ufle12jhs77_Enemy = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5111734664589835512UL, 16387060256869261988UL), () => _ufle12jhs77_Enemy = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Frequency;
	public static BansheeGz.BGDatabase.BGFieldFloat _Frequency => _ufle12jhs77_Frequency ?? (_ufle12jhs77_Frequency = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5170584109326192786UL, 4465977195211569290UL), () => _ufle12jhs77_Frequency = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Max;
	public static BansheeGz.BGDatabase.BGFieldInt _Max => _ufle12jhs77_Max ?? (_ufle12jhs77_Max = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5075216157934649214UL, 17383140627019052947UL), () => _ufle12jhs77_Max = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Cluster;
	public static BansheeGz.BGDatabase.BGFieldFloat _Cluster => _ufle12jhs77_Cluster ?? (_ufle12jhs77_Cluster = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5331692585234256210UL, 13803938486354973362UL), () => _ufle12jhs77_Cluster = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Chance;
	public static BansheeGz.BGDatabase.BGFieldFloat _Chance => _ufle12jhs77_Chance ?? (_ufle12jhs77_Chance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4622173018493056856UL, 7812075392562688700UL), () => _ufle12jhs77_Chance = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_DungeonWaveEvent() : base(MetaDefault)
	{
	}
	private DB_DungeonWaveEvent(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_DungeonWaveEvent(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_DungeonWaveEvent(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_DungeonWaveEvent FindEntity(Predicate<DB_DungeonWaveEvent> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_DungeonWaveEvent) entity)) as DB_DungeonWaveEvent;
	}
	public static List<DB_DungeonWaveEvent> FindEntities(Predicate<DB_DungeonWaveEvent> filter, List<DB_DungeonWaveEvent> result=null, Comparison<DB_DungeonWaveEvent> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_DungeonWaveEvent> action, Predicate<DB_DungeonWaveEvent> filter=null, Comparison<DB_DungeonWaveEvent> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_DungeonWaveEvent) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_DungeonWaveEvent) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_DungeonWaveEvent)e1,(DB_DungeonWaveEvent)e2));
	}
	public static DB_DungeonWaveEvent GetEntity(BGId entityId) => (DB_DungeonWaveEvent) MetaDefault.GetEntity(entityId);
	public static DB_DungeonWaveEvent GetEntity(int index) => (DB_DungeonWaveEvent) MetaDefault[index];
	public static DB_DungeonWaveEvent GetEntity(string entityName) => (DB_DungeonWaveEvent) MetaDefault.GetEntity(entityName);
}

public partial class DB_Weapon : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Weapon(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Weapon(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5733266747800506826UL,2906313785089472430UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String IdEquipment => _IdEquipment[Index];
	public System.String DamageType => _DamageType[Index];
	public System.String Rarity => _Rarity[Index];
	public System.Single Damage => _Damage[Index];
	public System.Single CritChance => _CritChance[Index];
	public System.Single AttackSpeed => _AttackSpeed[Index];
	public System.Single RangeAttack => _RangeAttack[Index];
	public System.Single Knockback => _Knockback[Index];
	public System.Int32 Projectiles => _Projectiles[Index];
	public System.Single Velocity => _Velocity[Index];
	public System.Int32 Unlock => _Unlock[Index];
	public System.Int32 Price => _Price[Index];
	public System.Collections.Generic.List<System.String> OtherStat => _OtherStat[Index];
	public System.Collections.Generic.List<System.String> StatUI => _StatUI[Index];
	public System.String PrefabPath => _PrefabPath[Index];
	public System.Collections.Generic.List<System.String> WeaponScaling => _WeaponScaling[Index];
	public System.String Class => _Class[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5486753898478038351UL, 5239391134350077865UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IdEquipment;
	public static BansheeGz.BGDatabase.BGFieldString _IdEquipment => _ufle12jhs77_IdEquipment ?? (_ufle12jhs77_IdEquipment = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4981804874786085979UL, 16244036463475313287UL), () => _ufle12jhs77_IdEquipment = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DamageType;
	public static BansheeGz.BGDatabase.BGFieldString _DamageType => _ufle12jhs77_DamageType ?? (_ufle12jhs77_DamageType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5699642348270128428UL, 13707322175264063133UL), () => _ufle12jhs77_DamageType = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldString _Rarity => _ufle12jhs77_Rarity ?? (_ufle12jhs77_Rarity = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4988088137366009747UL, 16160078976621036681UL), () => _ufle12jhs77_Rarity = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldFloat _Damage => _ufle12jhs77_Damage ?? (_ufle12jhs77_Damage = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5758352941000704615UL, 279227216087061904UL), () => _ufle12jhs77_Damage = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CritChance;
	public static BansheeGz.BGDatabase.BGFieldFloat _CritChance => _ufle12jhs77_CritChance ?? (_ufle12jhs77_CritChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5061452086836100050UL, 8878766143557968550UL), () => _ufle12jhs77_CritChance = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSpeed => _ufle12jhs77_AttackSpeed ?? (_ufle12jhs77_AttackSpeed = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5061103369081572510UL, 14289651339761375674UL), () => _ufle12jhs77_AttackSpeed = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RangeAttack;
	public static BansheeGz.BGDatabase.BGFieldFloat _RangeAttack => _ufle12jhs77_RangeAttack ?? (_ufle12jhs77_RangeAttack = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5222114336546005852UL, 4623160166658201224UL), () => _ufle12jhs77_RangeAttack = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Knockback;
	public static BansheeGz.BGDatabase.BGFieldFloat _Knockback => _ufle12jhs77_Knockback ?? (_ufle12jhs77_Knockback = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4755072541924824870UL, 13716102043652252847UL), () => _ufle12jhs77_Knockback = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Projectiles;
	public static BansheeGz.BGDatabase.BGFieldInt _Projectiles => _ufle12jhs77_Projectiles ?? (_ufle12jhs77_Projectiles = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5528723035083717624UL, 4646919761773980290UL), () => _ufle12jhs77_Projectiles = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Velocity;
	public static BansheeGz.BGDatabase.BGFieldFloat _Velocity => _ufle12jhs77_Velocity ?? (_ufle12jhs77_Velocity = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5036629961515111593UL, 16671435671602131903UL), () => _ufle12jhs77_Velocity = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Unlock;
	public static BansheeGz.BGDatabase.BGFieldInt _Unlock => _ufle12jhs77_Unlock ?? (_ufle12jhs77_Unlock = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5476332286798211034UL, 3161870350320855936UL), () => _ufle12jhs77_Unlock = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price => _ufle12jhs77_Price ?? (_ufle12jhs77_Price = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5116195100211045869UL, 3547864814218350503UL), () => _ufle12jhs77_Price = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_OtherStat;
	public static BansheeGz.BGDatabase.BGFieldListString _OtherStat => _ufle12jhs77_OtherStat ?? (_ufle12jhs77_OtherStat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(5133351617449095319UL, 9423277731382012345UL), () => _ufle12jhs77_OtherStat = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_StatUI;
	public static BansheeGz.BGDatabase.BGFieldListString _StatUI => _ufle12jhs77_StatUI ?? (_ufle12jhs77_StatUI = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(4989954162410628540UL, 9319384909449173937UL), () => _ufle12jhs77_StatUI = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_PrefabPath;
	public static BansheeGz.BGDatabase.BGFieldString _PrefabPath => _ufle12jhs77_PrefabPath ?? (_ufle12jhs77_PrefabPath = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4720937353355097434UL, 6252373223130517137UL), () => _ufle12jhs77_PrefabPath = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_WeaponScaling;
	public static BansheeGz.BGDatabase.BGFieldListString _WeaponScaling => _ufle12jhs77_WeaponScaling ?? (_ufle12jhs77_WeaponScaling = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(5227745974938551626UL, 13234869526982486681UL), () => _ufle12jhs77_WeaponScaling = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Class;
	public static BansheeGz.BGDatabase.BGFieldString _Class => _ufle12jhs77_Class ?? (_ufle12jhs77_Class = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4848226638322134944UL, 4554959298334254491UL), () => _ufle12jhs77_Class = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_Weapon() : base(MetaDefault)
	{
	}
	private DB_Weapon(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Weapon(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Weapon(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Weapon FindEntity(Predicate<DB_Weapon> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Weapon) entity)) as DB_Weapon;
	}
	public static List<DB_Weapon> FindEntities(Predicate<DB_Weapon> filter, List<DB_Weapon> result=null, Comparison<DB_Weapon> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Weapon> action, Predicate<DB_Weapon> filter=null, Comparison<DB_Weapon> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Weapon) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Weapon) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Weapon)e1,(DB_Weapon)e2));
	}
	public static DB_Weapon GetEntity(BGId entityId) => (DB_Weapon) MetaDefault.GetEntity(entityId);
	public static DB_Weapon GetEntity(int index) => (DB_Weapon) MetaDefault[index];
	public static DB_Weapon GetEntity(string entityName) => (DB_Weapon) MetaDefault.GetEntity(entityName);
}

public partial class DB_PerkRarity : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_PerkRarity(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_PerkRarity(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5311475314760370833UL,1448962693894215101UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String IdEquipment => _IdEquipment[Index];
	public System.String IdGear => _IdGear[Index];
	public System.String Rarity => _Rarity[Index];
	public System.String PerkType => _PerkType[Index];
	public System.String PerkStat => _PerkStat[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5223371704835465689UL, 12933659539986564777UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IdEquipment;
	public static BansheeGz.BGDatabase.BGFieldString _IdEquipment => _ufle12jhs77_IdEquipment ?? (_ufle12jhs77_IdEquipment = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5399570341228644548UL, 7523359246678619820UL), () => _ufle12jhs77_IdEquipment = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IdGear;
	public static BansheeGz.BGDatabase.BGFieldString _IdGear => _ufle12jhs77_IdGear ?? (_ufle12jhs77_IdGear = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5475352511539086860UL, 16358606561398759047UL), () => _ufle12jhs77_IdGear = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldString _Rarity => _ufle12jhs77_Rarity ?? (_ufle12jhs77_Rarity = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5208517445898668775UL, 15620373196916554428UL), () => _ufle12jhs77_Rarity = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_PerkType;
	public static BansheeGz.BGDatabase.BGFieldString _PerkType => _ufle12jhs77_PerkType ?? (_ufle12jhs77_PerkType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5482939659572615491UL, 7288519745837319102UL), () => _ufle12jhs77_PerkType = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_PerkStat;
	public static BansheeGz.BGDatabase.BGFieldString _PerkStat => _ufle12jhs77_PerkStat ?? (_ufle12jhs77_PerkStat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4797343983146385139UL, 1076810520718284684UL), () => _ufle12jhs77_PerkStat = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_PerkRarity() : base(MetaDefault)
	{
	}
	private DB_PerkRarity(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_PerkRarity(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_PerkRarity(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_PerkRarity FindEntity(Predicate<DB_PerkRarity> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_PerkRarity) entity)) as DB_PerkRarity;
	}
	public static List<DB_PerkRarity> FindEntities(Predicate<DB_PerkRarity> filter, List<DB_PerkRarity> result=null, Comparison<DB_PerkRarity> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_PerkRarity> action, Predicate<DB_PerkRarity> filter=null, Comparison<DB_PerkRarity> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_PerkRarity) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_PerkRarity) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_PerkRarity)e1,(DB_PerkRarity)e2));
	}
	public static DB_PerkRarity GetEntity(BGId entityId) => (DB_PerkRarity) MetaDefault.GetEntity(entityId);
	public static DB_PerkRarity GetEntity(int index) => (DB_PerkRarity) MetaDefault[index];
	public static DB_PerkRarity GetEntity(string entityName) => (DB_PerkRarity) MetaDefault.GetEntity(entityName);
}

public partial class DB_GameConfig : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_GameConfig(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_GameConfig(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5667507145059531655UL,13652673325387525797UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String ConfigKey => _ConfigKey[Index];
	public System.String ConfigValue => _ConfigValue[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4939113393774973438UL, 13653894120683439280UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ConfigKey;
	public static BansheeGz.BGDatabase.BGFieldString _ConfigKey => _ufle12jhs77_ConfigKey ?? (_ufle12jhs77_ConfigKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4927131490822964734UL, 11642070838833647758UL), () => _ufle12jhs77_ConfigKey = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ConfigValue;
	public static BansheeGz.BGDatabase.BGFieldString _ConfigValue => _ufle12jhs77_ConfigValue ?? (_ufle12jhs77_ConfigValue = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5231999877890111639UL, 10315952472082355112UL), () => _ufle12jhs77_ConfigValue = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_GameConfig() : base(MetaDefault)
	{
	}
	private DB_GameConfig(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_GameConfig(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_GameConfig(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_GameConfig FindEntity(Predicate<DB_GameConfig> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_GameConfig) entity)) as DB_GameConfig;
	}
	public static List<DB_GameConfig> FindEntities(Predicate<DB_GameConfig> filter, List<DB_GameConfig> result=null, Comparison<DB_GameConfig> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_GameConfig> action, Predicate<DB_GameConfig> filter=null, Comparison<DB_GameConfig> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_GameConfig) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_GameConfig) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_GameConfig)e1,(DB_GameConfig)e2));
	}
	public static DB_GameConfig GetEntity(BGId entityId) => (DB_GameConfig) MetaDefault.GetEntity(entityId);
	public static DB_GameConfig GetEntity(int index) => (DB_GameConfig) MetaDefault[index];
	public static DB_GameConfig GetEntity(string entityName) => (DB_GameConfig) MetaDefault.GetEntity(entityName);
}

public partial class DB_Buff : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_Buff(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_Buff(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4618038525259932992UL,15755599857678862486UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 Id => _Id[Index];
	public System.String Type => _Type[Index];
	public System.String LocalizeKey => _LocalizeKey[Index];
	public System.Collections.Generic.List<System.String> Modifier_Passive => _Modifier_Passive[Index];
	public System.Collections.Generic.List<System.String> Modifier_Skill => _Modifier_Skill[Index];
	public System.String PrefabPath => _PrefabPath[Index];
	public System.String Rarity => _Rarity[Index];
	public System.Single Weight => _Weight[Index];
	public System.Int32 Price => _Price[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4987903170844344991UL, 17903749237339434647UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id => _ufle12jhs77_Id ?? (_ufle12jhs77_Id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4627883334076095976UL, 13066108457392547989UL), () => _ufle12jhs77_Id = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type => _ufle12jhs77_Type ?? (_ufle12jhs77_Type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5072808737312042010UL, 4380905638494555069UL), () => _ufle12jhs77_Type = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_LocalizeKey;
	public static BansheeGz.BGDatabase.BGFieldString _LocalizeKey => _ufle12jhs77_LocalizeKey ?? (_ufle12jhs77_LocalizeKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5246771085597788387UL, 14428726740627782549UL), () => _ufle12jhs77_LocalizeKey = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Modifier_Passive;
	public static BansheeGz.BGDatabase.BGFieldListString _Modifier_Passive => _ufle12jhs77_Modifier_Passive ?? (_ufle12jhs77_Modifier_Passive = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(4878950370825686255UL, 17767114710750550429UL), () => _ufle12jhs77_Modifier_Passive = null));
	private static BansheeGz.BGDatabase.BGFieldListString _ufle12jhs77_Modifier_Skill;
	public static BansheeGz.BGDatabase.BGFieldListString _Modifier_Skill => _ufle12jhs77_Modifier_Skill ?? (_ufle12jhs77_Modifier_Skill = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListString>(MetaDefault, new BGId(5541051141528337167UL, 2772067831764353926UL), () => _ufle12jhs77_Modifier_Skill = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_PrefabPath;
	public static BansheeGz.BGDatabase.BGFieldString _PrefabPath => _ufle12jhs77_PrefabPath ?? (_ufle12jhs77_PrefabPath = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5571290678265947692UL, 5670525944851899303UL), () => _ufle12jhs77_PrefabPath = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldString _Rarity => _ufle12jhs77_Rarity ?? (_ufle12jhs77_Rarity = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5471277083475801740UL, 7106520923427940031UL), () => _ufle12jhs77_Rarity = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Weight;
	public static BansheeGz.BGDatabase.BGFieldFloat _Weight => _ufle12jhs77_Weight ?? (_ufle12jhs77_Weight = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(4874407208347025574UL, 12435542604228204722UL), () => _ufle12jhs77_Weight = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price => _ufle12jhs77_Price ?? (_ufle12jhs77_Price = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5191275898691914816UL, 15353988907780230022UL), () => _ufle12jhs77_Price = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_Buff() : base(MetaDefault)
	{
	}
	private DB_Buff(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_Buff(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_Buff(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_Buff FindEntity(Predicate<DB_Buff> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_Buff) entity)) as DB_Buff;
	}
	public static List<DB_Buff> FindEntities(Predicate<DB_Buff> filter, List<DB_Buff> result=null, Comparison<DB_Buff> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_Buff> action, Predicate<DB_Buff> filter=null, Comparison<DB_Buff> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_Buff) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_Buff) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_Buff)e1,(DB_Buff)e2));
	}
	public static DB_Buff GetEntity(BGId entityId) => (DB_Buff) MetaDefault.GetEntity(entityId);
	public static DB_Buff GetEntity(int index) => (DB_Buff) MetaDefault[index];
	public static DB_Buff GetEntity(string entityName) => (DB_Buff) MetaDefault.GetEntity(entityName);
}

public partial class DB_EnemyConfig : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_EnemyConfig(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_EnemyConfig(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5662968900856753507UL,13895789156797762432UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String ConfigKey => _ConfigKey[Index];
	public System.String ConfigValue => _ConfigValue[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5545623209910696604UL, 5302696383627258004UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ConfigKey;
	public static BansheeGz.BGDatabase.BGFieldString _ConfigKey => _ufle12jhs77_ConfigKey ?? (_ufle12jhs77_ConfigKey = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5531044962385832129UL, 3659561948548060053UL), () => _ufle12jhs77_ConfigKey = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ConfigValue;
	public static BansheeGz.BGDatabase.BGFieldString _ConfigValue => _ufle12jhs77_ConfigValue ?? (_ufle12jhs77_ConfigValue = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5095734151961211723UL, 1542989657564225181UL), () => _ufle12jhs77_ConfigValue = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_EnemyConfig() : base(MetaDefault)
	{
	}
	private DB_EnemyConfig(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_EnemyConfig(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_EnemyConfig(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_EnemyConfig FindEntity(Predicate<DB_EnemyConfig> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_EnemyConfig) entity)) as DB_EnemyConfig;
	}
	public static List<DB_EnemyConfig> FindEntities(Predicate<DB_EnemyConfig> filter, List<DB_EnemyConfig> result=null, Comparison<DB_EnemyConfig> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_EnemyConfig> action, Predicate<DB_EnemyConfig> filter=null, Comparison<DB_EnemyConfig> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_EnemyConfig) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_EnemyConfig) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_EnemyConfig)e1,(DB_EnemyConfig)e2));
	}
	public static DB_EnemyConfig GetEntity(BGId entityId) => (DB_EnemyConfig) MetaDefault.GetEntity(entityId);
	public static DB_EnemyConfig GetEntity(int index) => (DB_EnemyConfig) MetaDefault[index];
	public static DB_EnemyConfig GetEntity(string entityName) => (DB_EnemyConfig) MetaDefault.GetEntity(entityName);
}

public partial class DB_LevelExpGameplay : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_LevelExpGameplay(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_LevelExpGameplay(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5686822228797312043UL,13786898213731770028UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 Level => _Level[Index];
	public System.Int64 ExpRequire => _ExpRequire[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5328291770059467641UL, 238653686803771785UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level;
	public static BansheeGz.BGDatabase.BGFieldInt _Level => _ufle12jhs77_Level ?? (_ufle12jhs77_Level = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5178260878181157602UL, 16672160080125970321UL), () => _ufle12jhs77_Level = null));
	private static BansheeGz.BGDatabase.BGFieldLong _ufle12jhs77_ExpRequire;
	public static BansheeGz.BGDatabase.BGFieldLong _ExpRequire => _ufle12jhs77_ExpRequire ?? (_ufle12jhs77_ExpRequire = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldLong>(MetaDefault, new BGId(5176757479027722932UL, 17375744440501317300UL), () => _ufle12jhs77_ExpRequire = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_LevelExpGameplay() : base(MetaDefault)
	{
	}
	private DB_LevelExpGameplay(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_LevelExpGameplay(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_LevelExpGameplay(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_LevelExpGameplay FindEntity(Predicate<DB_LevelExpGameplay> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_LevelExpGameplay) entity)) as DB_LevelExpGameplay;
	}
	public static List<DB_LevelExpGameplay> FindEntities(Predicate<DB_LevelExpGameplay> filter, List<DB_LevelExpGameplay> result=null, Comparison<DB_LevelExpGameplay> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_LevelExpGameplay> action, Predicate<DB_LevelExpGameplay> filter=null, Comparison<DB_LevelExpGameplay> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_LevelExpGameplay) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_LevelExpGameplay) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_LevelExpGameplay)e1,(DB_LevelExpGameplay)e2));
	}
	public static DB_LevelExpGameplay GetEntity(BGId entityId) => (DB_LevelExpGameplay) MetaDefault.GetEntity(entityId);
	public static DB_LevelExpGameplay GetEntity(int index) => (DB_LevelExpGameplay) MetaDefault[index];
	public static DB_LevelExpGameplay GetEntity(string entityName) => (DB_LevelExpGameplay) MetaDefault.GetEntity(entityName);
}

public partial class DB_LevelExpAccount : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_LevelExpAccount(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_LevelExpAccount(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5261967217048347742UL,7685834756704872079UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.Int32 Level => _Level[Index];
	public System.Int64 ExpRequire => _ExpRequire[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(4826203743015004209UL, 11858944137793301407UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level;
	public static BansheeGz.BGDatabase.BGFieldInt _Level => _ufle12jhs77_Level ?? (_ufle12jhs77_Level = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(4839151311078594921UL, 5245766391511650728UL), () => _ufle12jhs77_Level = null));
	private static BansheeGz.BGDatabase.BGFieldLong _ufle12jhs77_ExpRequire;
	public static BansheeGz.BGDatabase.BGFieldLong _ExpRequire => _ufle12jhs77_ExpRequire ?? (_ufle12jhs77_ExpRequire = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldLong>(MetaDefault, new BGId(5486263338497964646UL, 14825673541543259819UL), () => _ufle12jhs77_ExpRequire = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_LevelExpAccount() : base(MetaDefault)
	{
	}
	private DB_LevelExpAccount(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_LevelExpAccount(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_LevelExpAccount(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_LevelExpAccount FindEntity(Predicate<DB_LevelExpAccount> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_LevelExpAccount) entity)) as DB_LevelExpAccount;
	}
	public static List<DB_LevelExpAccount> FindEntities(Predicate<DB_LevelExpAccount> filter, List<DB_LevelExpAccount> result=null, Comparison<DB_LevelExpAccount> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_LevelExpAccount> action, Predicate<DB_LevelExpAccount> filter=null, Comparison<DB_LevelExpAccount> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_LevelExpAccount) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_LevelExpAccount) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_LevelExpAccount)e1,(DB_LevelExpAccount)e2));
	}
	public static DB_LevelExpAccount GetEntity(BGId entityId) => (DB_LevelExpAccount) MetaDefault.GetEntity(entityId);
	public static DB_LevelExpAccount GetEntity(int index) => (DB_LevelExpAccount) MetaDefault[index];
	public static DB_LevelExpAccount GetEntity(string entityName) => (DB_LevelExpAccount) MetaDefault.GetEntity(entityName);
}

public partial class DB_LevelUp : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_LevelUp(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_LevelUp(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4791711307010293757UL,13235942265993897617UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String Stat => _Stat[Index];
	public System.String ModType => _ModType[Index];
	public System.Collections.Generic.List<System.Single> Modifier => _Modifier[Index];
	public System.Single Ratio => _Ratio[Index];
	public System.Int32 Id => _Id[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5571497454273028211UL, 5232925175369721257UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Stat;
	public static BansheeGz.BGDatabase.BGFieldString _Stat => _ufle12jhs77_Stat ?? (_ufle12jhs77_Stat = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4644865989698025406UL, 16622764137509198496UL), () => _ufle12jhs77_Stat = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_ModType;
	public static BansheeGz.BGDatabase.BGFieldString _ModType => _ufle12jhs77_ModType ?? (_ufle12jhs77_ModType = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5609979687880185488UL, 8820036057687596930UL), () => _ufle12jhs77_ModType = null));
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Modifier;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Modifier => _ufle12jhs77_Modifier ?? (_ufle12jhs77_Modifier = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldListFloat>(MetaDefault, new BGId(5693970233510162033UL, 5270487705033738904UL), () => _ufle12jhs77_Modifier = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Ratio;
	public static BansheeGz.BGDatabase.BGFieldFloat _Ratio => _ufle12jhs77_Ratio ?? (_ufle12jhs77_Ratio = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5660624552326697993UL, 2982951620674775462UL), () => _ufle12jhs77_Ratio = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Id;
	public static BansheeGz.BGDatabase.BGFieldInt _Id => _ufle12jhs77_Id ?? (_ufle12jhs77_Id = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5676538314553694785UL, 6788615952158841741UL), () => _ufle12jhs77_Id = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_LevelUp() : base(MetaDefault)
	{
	}
	private DB_LevelUp(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_LevelUp(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_LevelUp(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_LevelUp FindEntity(Predicate<DB_LevelUp> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_LevelUp) entity)) as DB_LevelUp;
	}
	public static List<DB_LevelUp> FindEntities(Predicate<DB_LevelUp> filter, List<DB_LevelUp> result=null, Comparison<DB_LevelUp> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_LevelUp> action, Predicate<DB_LevelUp> filter=null, Comparison<DB_LevelUp> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_LevelUp) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_LevelUp) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_LevelUp)e1,(DB_LevelUp)e2));
	}
	public static DB_LevelUp GetEntity(BGId entityId) => (DB_LevelUp) MetaDefault.GetEntity(entityId);
	public static DB_LevelUp GetEntity(int index) => (DB_LevelUp) MetaDefault[index];
	public static DB_LevelUp GetEntity(string entityName) => (DB_LevelUp) MetaDefault.GetEntity(entityName);
}

public partial class DB_ShopWaveConfig : BGEntity
{

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta) => new DB_ShopWaveConfig(meta);
		public BGEntity NewEntity(BGMetaEntity meta, BGId id) => new DB_ShopWaveConfig(meta, id);
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault => _metaDefault ?? (_metaDefault = BGCodeGenUtils.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4781459341985425206UL,10583026745926447513UL), () => _metaDefault = null));
	public static BansheeGz.BGDatabase.BGRepoEvents Events => BGRepo.I.Events;
	public static int CountEntities => MetaDefault.CountEntities;
	public System.String name => _name[Index];
	public System.String Type => _Type[Index];
	public System.String Rarity => _Rarity[Index];
	public System.Int32 MinWaveUnlock => _MinWaveUnlock[Index];
	public System.Single ChancePerWave => _ChancePerWave[Index];
	public System.Single MaxChance => _MaxChance[Index];
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name => _ufle12jhs77_name ?? (_ufle12jhs77_name = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldEntityName>(MetaDefault, new BGId(5731181810939235941UL, 8118264625108982462UL), () => _ufle12jhs77_name = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldString _Type => _ufle12jhs77_Type ?? (_ufle12jhs77_Type = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(5336282561978336841UL, 11289812334377530546UL), () => _ufle12jhs77_Type = null));
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Rarity;
	public static BansheeGz.BGDatabase.BGFieldString _Rarity => _ufle12jhs77_Rarity ?? (_ufle12jhs77_Rarity = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldString>(MetaDefault, new BGId(4942243089904741404UL, 17448130311680375427UL), () => _ufle12jhs77_Rarity = null));
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MinWaveUnlock;
	public static BansheeGz.BGDatabase.BGFieldInt _MinWaveUnlock => _ufle12jhs77_MinWaveUnlock ?? (_ufle12jhs77_MinWaveUnlock = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldInt>(MetaDefault, new BGId(5186079574906012882UL, 509580468770602420UL), () => _ufle12jhs77_MinWaveUnlock = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ChancePerWave;
	public static BansheeGz.BGDatabase.BGFieldFloat _ChancePerWave => _ufle12jhs77_ChancePerWave ?? (_ufle12jhs77_ChancePerWave = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5710335350160798702UL, 9530304756693321102UL), () => _ufle12jhs77_ChancePerWave = null));
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_MaxChance;
	public static BansheeGz.BGDatabase.BGFieldFloat _MaxChance => _ufle12jhs77_MaxChance ?? (_ufle12jhs77_MaxChance = BGCodeGenUtils.GetField<BansheeGz.BGDatabase.BGFieldFloat>(MetaDefault, new BGId(5014064290266568926UL, 306307801924584113UL), () => _ufle12jhs77_MaxChance = null));
	private static readonly DB_Equipment.Factory _factory0_PFS = new DB_Equipment.Factory();
	private static readonly DB_Dungeon.Factory _factory1_PFS = new DB_Dungeon.Factory();
	private static readonly DB_Enemy.Factory _factory2_PFS = new DB_Enemy.Factory();
	private static readonly DB_DungeonWave.Factory _factory3_PFS = new DB_DungeonWave.Factory();
	private static readonly DB_DungeonWaveEvent.Factory _factory4_PFS = new DB_DungeonWaveEvent.Factory();
	private static readonly DB_Weapon.Factory _factory5_PFS = new DB_Weapon.Factory();
	private static readonly DB_PerkRarity.Factory _factory6_PFS = new DB_PerkRarity.Factory();
	private static readonly DB_GameConfig.Factory _factory7_PFS = new DB_GameConfig.Factory();
	private static readonly DB_Buff.Factory _factory8_PFS = new DB_Buff.Factory();
	private static readonly DB_EnemyConfig.Factory _factory9_PFS = new DB_EnemyConfig.Factory();
	private static readonly DB_LevelExpGameplay.Factory _factory10_PFS = new DB_LevelExpGameplay.Factory();
	private static readonly DB_LevelExpAccount.Factory _factory11_PFS = new DB_LevelExpAccount.Factory();
	private static readonly DB_LevelUp.Factory _factory12_PFS = new DB_LevelUp.Factory();
	private static readonly DB_ShopWaveConfig.Factory _factory13_PFS = new DB_ShopWaveConfig.Factory();
	private DB_ShopWaveConfig() : base(MetaDefault)
	{
	}
	private DB_ShopWaveConfig(BGId id) : base(MetaDefault, id)
	{
	}
	private DB_ShopWaveConfig(BGMetaEntity meta) : base(meta)
	{
	}
	private DB_ShopWaveConfig(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static DB_ShopWaveConfig FindEntity(Predicate<DB_ShopWaveConfig> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((DB_ShopWaveConfig) entity)) as DB_ShopWaveConfig;
	}
	public static List<DB_ShopWaveConfig> FindEntities(Predicate<DB_ShopWaveConfig> filter, List<DB_ShopWaveConfig> result=null, Comparison<DB_ShopWaveConfig> sort=null) => BGCodeGenUtils.FindEntities(MetaDefault, filter, result, sort);
	public static void ForEachEntity(Action<DB_ShopWaveConfig> action, Predicate<DB_ShopWaveConfig> filter=null, Comparison<DB_ShopWaveConfig> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((DB_ShopWaveConfig) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((DB_ShopWaveConfig) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((DB_ShopWaveConfig)e1,(DB_ShopWaveConfig)e2));
	}
	public static DB_ShopWaveConfig GetEntity(BGId entityId) => (DB_ShopWaveConfig) MetaDefault.GetEntity(entityId);
	public static DB_ShopWaveConfig GetEntity(int index) => (DB_ShopWaveConfig) MetaDefault[index];
	public static DB_ShopWaveConfig GetEntity(string entityName) => (DB_ShopWaveConfig) MetaDefault.GetEntity(entityName);
}
#pragma warning restore 414
