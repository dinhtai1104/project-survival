using System.Linq;

public enum EBuff
{
    None = -1,
    AttackUp = 0,
    SpeedUp,
    FastHand,
    CritUp,
    PoisonAttack,
    FlameAttack,
    FreezeAttack,
    BigBullet,
    ExplosionAttack,
    BetterArmor,
    DodgeMaster,
    Berserk,
    MentalPower,
    AngelWhisper,
    AngelWings,
    FocusFire,
    GrowUp,
    SlowTime,
    Steady,
    SpringShoes,
    PiercingAmmo,
    DoubleShoot,
    DoubleBarrel,
    BouncingAmmo,
    BackFire,
    DeathBlast,
    Assassin,
    TimeArmor,
    TripleJump,
    Statue,
    Treasure,
    HeadShot,
    BandAid,
    FieldMedic,
    Stress,
    LifeSteal,
    Porcupine,
    BubbleShield,
    Tanker,
    SplitShoot,
    RocketLauncher,
    Heal,
    GunHeal,
    GunUp,
    TinyOne,
    WallClimb,
    Flamethrower,
    TrackingBullet,
    Ricochet,
    FreezeBlood,
IceShadow,
IceMeteor,
IceBullet,
KnockbackBullet,
ElectricBullet,
ElectricMeteor,
TimeSkip,
    TimeCrit,
HeroicSpirit,
AllIn,
BurningImprove,
PoisonImprove,
FrozenImprove,
    // Hero Passive
    NormalHeroPassive = 1000,
    PoisonHeroPassive,
    FrozenHeroPassive,
    NinjaHeroPassive,
    JumpHeroPassive,
    RocketHeroPassive,
    ShinigamiHeroPassive,
    CowboyHeroPassive,
    AngelHeroPassive,
    EvilHeroPassive,

    // Equipment Passive
    TempEquipmentPassive = 2000,
    RifleGunPassive,
    ShurikenPassive,
    GatlingGunPassive,
    RailGunPassive,
    GrenadeLauncherPassive,
    IcyGunPassive,
    BoomerangPassive,
    FireGunPassive,
    ElectricBallistaPassive,
}

public static class BuffExtension
{
    public static BuffEntity GetBuff(int index, EPickBuffType type)
    {
        var collections = DataManager.Base.Buff.Dictionary.Values.ToList();
        collections.RemoveAll(t => t.PickType != type);
        return collections.Find(t => t.Id == index);
    }
}